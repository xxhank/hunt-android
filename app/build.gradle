apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply plugin: 'com.google.firebase.firebase-perf'
apply from: '../gradleScript/quality.gradle'
apply from: '../gradleScript/jacoco.gradle'
apply from: '../gradleScript/factory.gradle'

def versionPropFile = project.file('./version.properties')
def VERSION_CODE
def VERSION

if (versionPropFile.canRead()) {
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropFile))
    VERSION_CODE = versionProps['VERSION_CODE']
    VERSION = versionProps['VERSION']
}

android {
    compileSdkVersion deps.build.compileSdkVersion
    buildToolsVersion deps.build.buildToolsVersion

    defaultConfig {
        applicationId "com.ctech.eaty"
        minSdkVersion deps.build.minSdkVersion
        targetSdkVersion deps.build.targetSdkVersion
        versionCode 17
        versionName VERSION
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude '/lib/mips64/**'
        exclude '/lib/arm64-v8a/**'
        exclude '/lib/x86_64/**'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    apollo {
        customTypeMapping['JSON'] = "java.lang.String"
        customTypeMapping['DateTime'] = "org.joda.time.DateTime"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation deps.kotlin
    implementation deps.support.multidex

    //UI
    implementation deps.support.appcompat
    implementation deps.support.design
    implementation deps.support.customtab
    implementation deps.support.palette
    implementation deps.support.constraint
    implementation deps.litho.lib
    implementation deps.litho.widget
    compileOnly deps.litho.annotation
    kapt deps.litho.processor
    implementation deps.litho.fresco

    implementation deps.litho.sectionCore
    implementation deps.litho.sectionWidget
    compileOnly deps.litho.sectionAnnotation
    kapt deps.litho.sectionProcessor


    implementation deps.ui.lottie
    implementation deps.ui.inkindicator
    implementation deps.ui.gradient
    implementation deps.ui.viewanimator
    implementation deps.ui.htmlBuilder

    //Media
    implementation deps.exo.core
    implementation deps.exo.ui
    implementation deps.exo.dash
    implementation deps.exo.hls
    implementation deps.exo.smoothstreaming

    //Reactive
    implementation deps.rx.android
    implementation deps.rx.java
    implementation deps.rx.network


    implementation deps.noadapter
    implementation deps.butterknife.lib
    kapt deps.butterknife.compiler

    //Autodispose
    implementation deps.autodispose.core
    implementation deps.autodispose.android
    implementation deps.autodispose.architecture
    implementation deps.autodispose.kotlin


    //Dagger
    implementation deps.dagger.lib
    implementation deps.dagger.androidSupport
    kapt deps.dagger.compiler
    implementation deps.dagger.android
    kapt deps.dagger.androidCompiler

    //Networking
    implementation deps.graphql.apollo
    implementation deps.graphql.apolloCache
    implementation deps.graphql.apolloRx

    implementation deps.network.retrofit
    implementation deps.network.retrofitRxAdapter
    implementation deps.network.okhttp
    implementation deps.network.okhttpLog
    implementation deps.network.retrofitGsonConverter
    implementation deps.gson

    implementation deps.glide.lib
    kapt deps.glide.compiler

    implementation deps.jsoup

    //Caching
    implementation deps.store.lib
    implementation deps.store.cache
    implementation deps.store.middleware
    implementation deps.store.filesystem

    //Date
    implementation deps.jodatime

    //Ad
    implementation('com.facebook.android:audience-network-sdk:4.+') {
        exclude group: "com.google.android.gms"
        exclude group: "com.google.android.exoplayer"

    }
    implementation deps.firebase.ads

    //Logging
    implementation deps.timber

    //Tracking
    implementation deps.firebase.core
    implementation deps.firebase.perf
    implementation deps.firebase.indexing
    implementation deps.firebase.messaging

    //React
    implementation deps.react.core
    implementation deps.react.gif


    //Social
    implementation deps.facebook.login
    implementation deps.twitter.core

    //Profile
    debugImplementation deps.leakcanary.op
    releaseImplementation deps.leakcanary.noop
    testImplementation deps.leakcanary.noop

    //Crash report
    implementation(deps.crashlytics) {
        transitive = true
    }

    implementation files('libs/YouTubeAndroidPlayerApi.jar')


    testImplementation deps.test.junit
    testImplementation deps.test.mockito
    testImplementation deps.test.robolectric
    testImplementation deps.litho.test

    androidTestImplementation deps.support.annotation
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'org.mockito:mockito-android:2.7.19'

    configurations.all {
        exclude group: 'com.facebook.yoga', module: 'yoga'
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
    }
}

apply plugin: 'com.google.gms.google-services'

